{"version":3,"sources":["letgo.js"],"names":[],"mappings":"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","file":"letgo.support.js","sourcesContent":["/*;\n\t@module-license:\n\t\tThe MIT License (MIT)\n\t\t@mit-license\n\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\n\t\t@email: richeve.bebedor@gmail.com\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.\n\t@end-module-license\n\n\t@module-configuration:\n\t\t{\n\t\t\t\"package\": \"letgo\",\n\t\t\t\"path\": \"letgo/letgo.js\",\n\t\t\t\"file\": \"letgo.js\",\n\t\t\t\"module\": \"letgo\",\n\t\t\t\"author\": \"Richeve S. Bebedor\",\n\t\t\t\"contributors\": [\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\"\n\t\t\t],\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\n\t\t\t\"repository\": \"https://github.com/volkovasystems/letgo.git\",\n\t\t\t\"test\": \"letgo-test.js\",\n\t\t\t\"global\": true\n\t\t}\n\t@end-module-configuration\n\n\t@module-documentation:\n\t\tConstruct a catcher flow procedure.\n\n\t\tThis will return a catcher function which should\n\t\t\tbe returned to catch a callback.\n\n\t\tThe catcher contains a cache with the callback.\n\n\t\tThe catcher returns the cache by default.\n\n\t\tThe cache contains the result and callback.\n\n\t\tPassing a custom method to letgo executes the method after consuming the callback\n\t\t\tand after executing the catcher function. This will provide for a more\n\t\t\tspecific flow of procedures.\n\n\t\tPassing a custom method will change the flow of the procedure. The method\n\t\t\tis executed once and the result will be saved forever.\n\n\t\tAn internal cleaning mechanism allows you to clean up the cache data.\n\n\t\tThe result of the custom method will be returned instead of cache if it is given.\n\t@end-module-documentation\n\n\t@include:\n\t\t{\n\t\t\t\"arid\": \"arid\",\n\t\t\t\"budge\": \"budge\",\n\t\t\t\"called\": \"called\",\n\t\t\t\"depher\": \"depher\",\n\t\t\t\"exec\": \"execd\",\n\t\t\t\"filled\": \"filled\",\n\t\t\t\"harden\": \"harden\",\n\t\t\t\"protype\": \"protype\",\n\t\t\t\"truly\": \"truly\",\n\t\t\t\"zelf\": \"zelf\",\n\t\t}\n\t@end-include\n*/\n\nconst arid = require( \"arid\" );\nconst budge = require( \"budge\" );\nconst called = require( \"called\" );\nconst depher = require( \"depher\" );\nconst execd = require( \"execd\" );\nconst filled = require( \"filled\" );\nconst harden = require( \"harden\" );\nconst protype = require( \"protype\" );\nconst truly = require( \"truly\" );\nconst zelf = require( \"zelf\" );\n\n\t//: @reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\n\tArray.prototype.every||(Array.prototype.every=function(r,t){\"use strict\";\n\tvar e,n;if(null==this)throw new TypeError(\"this is null or not defined\");\n\tvar o=Object(this),i=o.length>>>0;if(\"function\"!=typeof r)throw new TypeError;\n\tfor(arguments.length>1&&(e=t),n=0;i>n;){var f;if(n in o){f=o[n];var y=r.call(e,f,n,o);\n\tif(!y)return!1}n++}return!0});\n\n\t//: @reference: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\n\tArray.prototype.some||(Array.prototype.some=function(r){\"use strict\";\n\tif(null==this)throw new TypeError(\"Array.prototype.some called on null or undefined\");\n\tif(\"function\"!=typeof r)throw new TypeError;for(var e=Object(this),t=e.length>>>0,\n\to=arguments.length>=2?arguments[1]:void 0,n=0;t>n;n++)\n\tif(n in e&&r.call(o,e[n],n,e))return!0;return!1});\n\nconst CLEANER = Symbol( \"cleaner\" );\nconst CHECKER = Symbol( \"checker\" );\n\nconst letgo = function letgo( method ){\n\t/*;\n\t\t@meta-configuration:\n\t\t\t{\n\t\t\t\t\"method\": \"function\"\n\t\t\t}\n\t\t@end-meta-configuration\n\t*/\n\n\tif( truly( method ) && !protype( method, FUNCTION ) ){\n\t\tthrow new Error( \"invalid method\" );\n\t}\n\n\tlet self = zelf( this );\n\n\tlet cache = {\n\t\t[ CHECKER ]: [ ],\n\t\t[ CLEANER ]: [ ],\n\t\t\"callback\": called.bind( self )( )\n\t};\n\n\t/*;\n\t\t@note:\n\t\t\tThis is the default cleaner.\n\t\t@end-note\n\t*/\n\tcache[ CLEANER ].push( function clean( ){\n\t\tObject.getOwnPropertyNames( cache ).forEach( ( name ) => {\n\t\t\tif( name != \"callback\" ){\n\t\t\t\ttry{ cache[ name ] = undefined; }catch( error ){ }\n\t\t\t}\n\t\t} );\n\t} );\n\n\t/*;\n\t\t@note:\n\t\t\tThis is the default checker if execution has finished.\n\t\t@end-note\n\t*/\n\tcache[ CHECKER ].push( function check( ){\n\t\treturn ( truly( cache.callback ) && execd( cache.callback ) || arid( cache[ CLEANER ] ) );\n\t} );\n\n\tlet catcher = called.bind( self )( function catcher( callback ){\n\t\tcache.callback = called.bind( self )( callback );\n\n\t\t/*;\n\t\t\t@note:\n\t\t\t\tPossible usage of the passed parameters as initial values.\n\t\t\t@end-note\n\t\t*/\n\t\tlet parameter = budge( arguments );\n\t\tcache.parameter = parameter;\n\n\t\t/*;\n\t\t\t@note:\n\t\t\t\tIf the method is given, it will execute the method\n\t\t\t\t\tafter the catcher function is called.\n\n\t\t\t\tThis will return the result of the method instead of the cache.\n\t\t\t@end-note\n\t\t*/\n\t\tif( truly( method ) && protype( method, FUNCTION ) ){\n\t\t\ttry{\n\t\t\t\t/*;\n\t\t\t\t\t@note:\n\t\t\t\t\t\tDon't change this structure, cache should come first.\n\t\t\t\t\t@end-note\n\t\t\t\t*/\n\t\t\t\tlet result = method.apply( self, [ cache ].concat( parameter ) );\n\n\t\t\t\tcache.result = result;\n\n\t\t\t\treturn result;\n\n\t\t\t}catch( error ){\n\t\t\t\treturn cache.callback( new Error( `error executing catcher custom method, ${ error.stack }` ) );\n\t\t\t}\n\t\t}\n\n\t\treturn cache;\n\t} );\n\n\t/*;\n\t\t@note:\n\t\t\tThis is the heart of the catcher-flow procedure.\n\t\t@end-note\n\t*/\n\tharden( \"cache\", cache, catcher );\n\n\t/*;\n\t\t@note:\n\t\t\tThis method is provided to prevent internal memory leaks.\n\t\t@end-note\n\t*/\n\tharden( \"release\", function release( cleaner ){\n\t\tif( protype( cleaner, FUNCTION ) ){\n\t\t\tcache[ CLEANER ].push( cleaner );\n\n\t\t\treturn catcher;\n\t\t}\n\n\t\tif( arid( cache[ CLEANER ] ) ){\n\t\t\treturn catcher;\n\t\t}\n\n\t\tlet reset = depher( arguments, BOOLEAN, false );\n\t\tif( reset ){\n\t\t\twhile( filled( cache[ CLEANER ] ) ){\n\t\t\t\tcache[ CLEANER ].pop( )( );\n\t\t\t}\n\n\t\t\twhile( filled( cache[ CHECKER ] ) ){\n\t\t\t\tcache[ CHECKER ].pop( );\n\t\t\t}\n\n\t\t}else{\n\t\t\tcache[ CLEANER ].forEach( ( cleaner ) => { cleaner( ); } );\n\t\t}\n\n\t\treturn catcher;\n\t}, catcher );\n\n\t/*;\n\t\t@note:\n\t\t\tThis method is used to register checker and check if the catcher is already done.\n\t\t@end-note\n\t*/\n\tharden( \"done\", function done( checker ){\n\t\tif( protype( checker, FUNCTION ) ){\n\t\t\tcache[ CHECKER ].push( checker );\n\n\t\t\treturn catcher;\n\t\t}\n\n\t\t/*;\n\t\t\t@note:\n\t\t\t\tIf the checkers are empty it means the catcher has been reset.\n\t\t\t@end-note\n\t\t*/\n\t\tif( arid( cache[ CHECKER ] ) ){\n\t\t\treturn true;\n\t\t}\n\n\t\tlet strict = depher( arguments, BOOLEAN, false );\n\t\tif( strict ){\n\t\t\treturn cache[ CHECKER ].every( ( checker ) => { return checker( ); } );\n\n\t\t}else{\n\t\t\treturn cache[ CHECKER ].some( ( checker ) => { return checker( ); } );\n\t\t}\n\n\t}, catcher );\n\n\treturn catcher;\n};\n\nmodule.exports = letgo;\n"]}